data.com <- data.cac
#case control data for LBL (case+control+affected offspring)
colnames(data.cac) <- colnames(offspring)
data.cac <- rbind(data.cac,offspring)
data.cac[,1] <- 1:nrow(data.cac)
result1 <- LBL(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 20000, num.it = 50000)
result <- bf.calculation(result1)
haplotypes <- result$haplotypes
BF <- c(haplotypes[-length(haplotypes)], result$BF)
CI.interval <- as.numeric(apply(result$OR.CI,1, function(x) prod(x-1)>0 ))
BF
result2 <- LBL(type="fam",data.fam=data.f,a=15,b=15,burn.in = 20000, num.it = 50000)
result <- bf.calculation(result2)
haplotypes <- result$haplotypes
BF <- c(haplotypes[-length(haplotypes)], result$BF)
CI.interval <- as.numeric(apply(result$OR.CI,1, function(x) prod(x-1)>0 ))
BF
#write.table(BF,"famLBL.txt",append=T,col.names=F)
result3 <- LBL(type="combined",data.fam=data.f,data.cac=data.com,a=15,b=15,burn.in = 20000, num.it = 50000)
result <- bf.calculation(result3)
haplotypes <- result$haplotypes
BF <- c(haplotypes[-length(haplotypes)], result$BF)
CI.interval <- as.numeric(apply(result$OR.CI,1, function(x) prod(x-1)>0 ))
BF
library(LBL)
getwd()
setwd(~)
setwd("~")
setwd("/Volumes/ESD-USB/publishing/Xiaofei_simulation/new")
#setwd("/Volumes/ESD-USB/cLBL_software_project/software/LBL-version-0.01/simulations/")
library(LBL)
#source("code/LBL.R")
source("fccLBLgen_Ver16.R")
dataGen <-fccLBLgen("HS1_C",famSize=500,caseSize=500,controlSize=500,allelic=T,setSeed=F,mySeed,covBeta=1,covVectorMean=0,covVectorSd=1)
data.f <- dataGen$familyData
offspring <- data.f[data.f[,6]==1,]
offspring <- offspring[offspring[,3] != 0 & offspring[,4] != 0,]
data.cac <- rbind(dataGen$controlData, dataGen$caseData)
data.cac <- data.cac[,-2]
temp <- cbind(1:nrow(data.cac),1,0,0,1)
data.cac <- cbind(temp,data.cac)
#case control data for cLBL
data.com <- data.cac
#case control data for LBL (case+control+affected offspring)
colnames(data.cac) <- colnames(offspring)
data.cac <- rbind(data.cac,offspring)
data.cac[,1] <- 1:nrow(data.cac)
data.cac[,6] <- data.cac[,6]+1
data.f[,6] <- data.f[,6]+1
head(data.f)
head(data.cac)
table(data.f[,6])
table(data.cac[,6])
#case_control
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 20000, num.it = 50000)
install.packages("LBL",source="LBL_0.0.0.9000.tar.gz")
install.packages("LBL", source = "LBL_0.0.0.9000.tar.gz")
library(LBL)
#case_control
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 20000, num.it = 50000)
result <- LBL_summary(result1)
haplotypes <- result$haplotypes
BF <- c(haplotypes[-length(haplotypes)], result$BF)
CI.interval <- as.numeric(apply(result$OR.CI,1, function(x) prod(x-1)>0 ))
BF
result2 <- LBLChains(type="fam",data.fam=data.f,a=15,b=15,burn.in = 20000, num.it = 50000)
result <- LBL_summary(result2)
result
#write.table(BF,"famLBL.txt",append=T,col.names=F)
result3 <- LBLChains(type="combined",data.fam=data.f,data.cac=data.com,a=15,b=15,burn.in = 20000, num.it = 50000)
getwd()
setwd("/Volumes/ESD-USB/publishing/Xiaofei_simulation/new")
library(LBL)
library(LBL)
library(LBL)
#source("code/LBL.R")
source("fccLBLgen_Ver16.R")
#source("data_generation.R")
dataGen <-fccLBLgen("HS1_C",famSize=500,caseSize=500,controlSize=500,allelic=T,setSeed=F,mySeed,covBeta=1,covVectorMean=0,covVectorSd=1)
data.f <- dataGen$familyData
offspring <- data.f[data.f[,6]==1,]
offspring <- offspring[offspring[,3] != 0 & offspring[,4] != 0,]
data.cac <- rbind(dataGen$controlData, dataGen$caseData)
data.cac <- data.cac[,-2]
temp <- cbind(1:nrow(data.cac),1,0,0,1)
data.cac <- cbind(temp,data.cac)
#case control data for cLBL
data.com <- data.cac
#case control data for LBL (case+control+affected offspring)
colnames(data.cac) <- colnames(offspring)
data.cac <- rbind(data.cac,offspring)
data.cac[,1] <- 1:nrow(data.cac)
data.cac[,6] <- data.cac[,6]+1
data.f[,6] <- data.f[,6]+1
#case_control
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, num.it = 10)
library(LBL)
#case_control
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, num.it = 10)
q()
library(LBL)
#case_control
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, num.it = 10)
result <- LBL_summary(result1)
remove(LBL)
library(LBL)
devtools::load_all("~/LBL")
#setwd("/Volumes/ESD-USB/cLBL_software_project/software/LBL-version-0.01/simulations/")
library(LBL)
#source("code/LBL.R")
source("fccLBLgen_Ver16.R")
setwd("/Volumes/ESD-USB/publishing/Xiaofei_simulation/new")
#source("code/LBL.R")
source("fccLBLgen_Ver16.R")
setwd("/Volumes/ESD-USB/publishing/Xiaofei_simulation/new")
n <- 10
dataGen <-fccLBLgen("HS1_C",famSize=500,caseSize=500,controlSize=500,allelic=T,setSeed=F,mySeed,covBeta=1,covVectorMean=0,covVectorSd=1)
data.f <- dataGen$familyData
offspring <- data.f[data.f[,6]==1,]
offspring <- offspring[offspring[,3] != 0 & offspring[,4] != 0,]
data.cac <- rbind(dataGen$controlData, dataGen$caseData)
data.cac <- data.cac[,-2]
temp <- cbind(1:nrow(data.cac),1,0,0,1)
data.cac <- cbind(temp,data.cac)
#case control data for cLBL
data.com <- data.cac
#case control data for LBL (case+control+affected offspring)
colnames(data.cac) <- colnames(offspring)
data.cac <- rbind(data.cac,offspring)
data.cac[,1] <- 1:nrow(data.cac)
data.cac[,6] <- data.cac[,6]+1
data.f[,6] <- data.f[,6]+1
#case_control
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, num.it = 10)
RNGkind()
set.seed(123)
#case_control
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, num.it = 10)
set.seed(123)
#case_control
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, num.it = 10)
set.seed(3453)
#case_control
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, num.it = 10)
set.seed(3453)
#source("data_generation.R")
dataGen <-fccLBLgen("HS1_C",famSize=500,caseSize=500,controlSize=500,allelic=T,setSeed=F,mySeed,covBeta=1,covVectorMean=0,covVectorSd=1)
set.seed(3453)
#case_control
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, num.it = 10)
set.seed(3453)
#case_control
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, num.it = 10)
#source("data_generation.R")
dataGen <-fccLBLgen("HS1_C",famSize=500,caseSize=500,controlSize=500,allelic=T,setSeed=T,mySeed=seed,covBeta=1,covVectorMean=0,covVectorSd=1)
seed=34213
#source("data_generation.R")
dataGen <-fccLBLgen("HS1_C",famSize=500,caseSize=500,controlSize=500,allelic=T,setSeed=T,mySeed=seed,covBeta=1,covVectorMean=0,covVectorSd=1)
.Random.seed
#source("data_generation.R")
dataGen <-fccLBLgen("HS1_C",famSize=500,caseSize=500,controlSize=500,allelic=T,setSeed=F,mySeed,covBeta=1,covVectorMean=0,covVectorSd=1)
dataGen <-fccLBLgen("HS1_C",famSize=500,caseSize=500,controlSize=500,allelic=T,setSeed=F,mySeed,covBeta=1,covVectorMean=0,covVectorSd=1)
data.f <- dataGen$familyData
offspring <- data.f[data.f[,6]==1,]
offspring <- offspring[offspring[,3] != 0 & offspring[,4] != 0,]
data.cac <- rbind(dataGen$controlData, dataGen$caseData)
data.cac <- data.cac[,-2]
temp <- cbind(1:nrow(data.cac),1,0,0,1)
data.cac <- cbind(temp,data.cac)
#case control data for cLBL
data.com <- data.cac
#case control data for LBL (case+control+affected offspring)
colnames(data.cac) <- colnames(offspring)
data.cac <- rbind(data.cac,offspring)
data.cac[,1] <- 1:nrow(data.cac)
data.old <- data.cac
data.cac[,6] <- data.cac[,6]+1
data.f[,6] <- data.f[,6]+1
#case_control
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, seed=seed, num.it = 10)
getwd()
source("code/LBL.R")
source("../old/code/LBL.R")
result1 <- LBL(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 20000, num.it = 50000)
seed=34213
#case_control
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, seed=seed, num.it = 10)
seed=34213
result1 <- LBL(type="cac",data.cac=data.old,a=15,b=15,burn.in = 0, num.it = 10)
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, seed=seed, num.it = 10)
result1 <- LBL(type="cac",data.cac=data.old,a=15,b=15,burn.in = 0,seed=seed num.it = 10)
result1 <- LBL(type="cac",data.cac=data.old,a=15,b=15,burn.in = 0,seed=seed, num.it = 10)
library(LBL)
setwd("/Volumes/ESD-USB/publishing/Xiaofei_simulation/new")
library(LBL)
source("code/LBL.R")
source("fccLBLgen_Ver16.R")
seed=34213
dataGen <-fccLBLgen("HS1_C",famSize=500,caseSize=500,controlSize=500,allelic=T,setSeed=F,mySeed,covBeta=1,covVectorMean=0,covVectorSd=1)
data.f <- dataGen$familyData
offspring <- data.f[data.f[,6]==1,]
offspring <- offspring[offspring[,3] != 0 & offspring[,4] != 0,]
data.cac <- rbind(dataGen$controlData, dataGen$caseData)
data.cac <- data.cac[,-2]
temp <- cbind(1:nrow(data.cac),1,0,0,1)
data.cac <- cbind(temp,data.cac)
#case control data for cLBL
data.com <- data.cac
#case control data for LBL (case+control+affected offspring)
colnames(data.cac) <- colnames(offspring)
data.cac <- rbind(data.cac,offspring)
data.cac[,1] <- 1:nrow(data.cac)
data.old <- data.cac
data.cac[,6] <- data.cac[,6]+1
data.f[,6] <- data.f[,6]+1
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, seed=seed, num.it = 10)
result1 <- LBL(type="cac",data.cac=data.old,a=15,b=15,burn.in = 0,seed=seed, num.it = 10)
data.fam=data.f
baseline="missing"; a = 15; b = 15; start.beta = 0.01; lambda = 1; D = 0; seed = NULL; e = 0.1; burn.in = 10000; num.it = 50000; verbose=F
if (!is.matrix(data.cac)) data.cac <- matrix(unlist(data.cac,use.names=F),nrow=nrow(data.cac))
status <- ifelse(data.cac[,6] ==2, 1, 0)
data.cac[,6] <- status
head(data.cac)
dataGen <-fccLBLgen("HS1_C",famSize=500,caseSize=500,controlSize=500,allelic=T,setSeed=F,mySeed,covBeta=1,covVectorMean=0,covVectorSd=1)
data.f <- dataGen$familyData
offspring <- data.f[data.f[,6]==1,]
offspring <- offspring[offspring[,3] != 0 & offspring[,4] != 0,]
data.cac <- rbind(dataGen$controlData, dataGen$caseData)
data.cac <- data.cac[,-2]
temp <- cbind(1:nrow(data.cac),1,0,0,1)
data.cac <- cbind(temp,data.cac)
#case control data for cLBL
data.com <- data.cac
#case control data for LBL (case+control+affected offspring)
colnames(data.cac) <- colnames(offspring)
data.cac <- rbind(data.cac,offspring)
data.cac[,1] <- 1:nrow(data.cac)
data.old <- data.cac
data.cac[,6] <- data.cac[,6]+1
data.f[,6] <- data.f[,6]+1
head(data.cac)
tail(data.cac)
table(data.cac[,6])
table(data.f[,6])
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, seed=seed, num.it = 10)
result1 <- LBL(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0,seed=seed, num.it = 10)
#package
seed=34213
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, seed=seed, num.it = 10)
#old code
seed=34213
result1 <- LBL(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0,seed=seed, num.it = 10)
library(LBL)
seed=34213
dataGen <-fccLBLgen("HS1_C",famSize=500,caseSize=500,controlSize=500,allelic=T,setSeed=F,mySeed,covBeta=1,covVectorMean=0,covVectorSd=1)
data.f <- dataGen$familyData
offspring <- data.f[data.f[,6]==1,]
offspring <- offspring[offspring[,3] != 0 & offspring[,4] != 0,]
data.cac <- rbind(dataGen$controlData, dataGen$caseData)
data.cac <- data.cac[,-2]
temp <- cbind(1:nrow(data.cac),1,0,0,1)
data.cac <- cbind(temp,data.cac)
#case control data for cLBL
data.com <- data.cac
#case control data for LBL (case+control+affected offspring)
colnames(data.cac) <- colnames(offspring)
data.cac <- rbind(data.cac,offspring)
data.cac[,1] <- 1:nrow(data.cac)
data.old <- data.cac
data.cac[,6] <- data.cac[,6]+1
data.f[,6] <- data.f[,6]+1
source("code/LBL.R")
seed=34213
seed=34213
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, seed=seed, num.it = 10)
#old code
seed=34213
result1 <- LBL(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0,seed=seed, num.it = 10)
seed=34213
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, seed=seed, num.it = 10)
#old code
seed=34213
result1 <- LBL(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0,seed=seed, num.it = 10)
library(LBL)
source("code/LBL.R")
library(LBL)
seed=34213
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, seed=seed, num.it = 10)
#old code
seed=34213
result1 <- LBL(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0,seed=seed, num.it = 10)
library(LBL)
source("code/LBL.R")
library(LBL)
seed=34213
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, seed=seed, num.it = 5)
#old code
seed=34213
result1 <- LBL(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0,seed=seed, num.it = 5)
library(LBL)
source("code/LBL.R")
#package
seed=34213
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, seed=seed, num.it = 3)
#old code
seed=34213
result1 <- LBL(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0,seed=seed, num.it = 3)
library(LBL)
source("code/LBL.R")
#package
seed=34213
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, seed=seed, num.it = 3)
#old code
seed=34213
result1 <- LBL(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0,seed=seed, num.it = 3)
library(LBL)
source("code/LBL.R")
#package
seed=34213
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, seed=seed, num.it = 3)
#old code
seed=34213
result1 <- LBL(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0,seed=seed, num.it = 3)
library(LBL)
source("code/LBL.R")
#package
seed=34213
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, seed=seed, num.it = 3)
#old code
seed=34213
result1 <- LBL(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0,seed=seed, num.it = 3)
source("code/LBL.R")
result1 <- LBL(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0,seed=seed, num.it = 3)
library(LBL)
source("code/LBL.R")
#package
seed=34213
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, seed=seed, num.it = 3)
#old code
seed=34213
result1 <- LBL(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0,seed=seed, num.it = 3)
library(LBL)
source("code/LBL.R")
#package
seed=34213
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, seed=seed, num.it = 3)
#old code
seed=34213
result1 <- LBL(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0,seed=seed, num.it = 3)
.random.seed
.Random.seed
set.seed(195323)
rnorm(10,4,2)
source("code/LBL.R")
#package
seed=34213
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, seed=seed, num.it = 3)
#old code
seed=34213
result1 <- LBL(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0,seed=seed, num.it = 3)
library(LBL)
source("code/LBL.R")
seed=34213
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, seed=seed, num.it = 3)
#old code
seed=34213
result1 <- LBL(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0,seed=seed, num.it = 3)
source("code/LBL.R")
#package
seed=34213
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, seed=seed, num.it = 3)
#package
seed=34213
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, seed=seed, num.it = 2)
#old code
seed=34213
result1 <- LBL(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0,seed=seed, num.it = 2)
library(LBL)
source("code/LBL.R")
library(LBL)
source("code/LBL.R")
#package
seed=34213
result1 <- LBLChains(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0, seed=seed, num.it = 5)
#old code
seed=34213
result1 <- LBL(type="cac",data.cac=data.cac,a=15,b=15,burn.in = 0,seed=seed, num.it = 5)
library(LBL)
library(LBL)
library(LBL)
?LBL
library(LBL)
?LBL
library(LBL)
?LBL
library(LBL)
?LBL
library(LBL)
?LBL
library(LBL)
?LBL
library(LBL)
?LBL
library(LBL)
library(LBL)
?LBL
library(LBL)
?LBL
?LBL
library(LBL)
?`LBL-package`
?hapassoc
library(LBL)
?`LBL-package`
library(LBL)
?\pkg{
?`LBL-package`
?`hapassoc-package`
??hapassoc
?hapassoc
library(LBL)
?`LBL-package`
library(LBL)
?LBLChains
?data
?cac
library(LBL)
?LBLChains
?cac
data(fam)
head(fam)
library(LBL)
?LBLChains
library(LBL)
?LBL_summary
library(LBL)
?LBLChains
library(LBL)
?LBLChains
library(LBL)
?LBLChains
library(LBL)
?LBLChains
library(LBL)
?LBLChains
library(LBL)
?LBLChains
?LBL_summary
library(LBL)
?LBLChains
library(LBL)
?LBLChains
library(LBL)
?LBLChains
library(LBL)
library(LBL)
library(LBL)
?LBL
LBLChains
data(data.fam)
data(fam)
head(fam)
dim(fam)
data(cac)
dim(cac)
?hapassoc
pre.hapassoc
library(hapassoc)
pre.hapassoc()
pre.hapassoc
?RecodeHaplos
RecodeHaplos
33365+8000
33365+8000+29000
48000-29000
library(LBL)
?LBLcac
library(LBL)
?LBLcac
library(LBL)
?LBLcac\
?LBLcac
24/50
480/7
24000/365
install.packages("roxygen2")
roxygenize('.', roclets=c('rd', 'collate', 'namespace'))
library("roxygen2")
roxygenize('.', roclets=c('rd', 'collate', 'namespace'))
package_native_routine_registration_skeleton(".")
?package_native_routine_registration_skeleton()
installed.packages("testthat")
devtools::install_github("r-lib/devtools")
library(devtools)
install.packages("devtools")
library(devtools)
has_devel()
'/Library/Frameworks/R.framework/Resources/bin/R' --vanilla CMD SHLIB foo.c
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
install.packages("rstudioapi")
rstudioapi::isAvailable("0.99.149")
devtools::install_github("r-lib/devtools")
library(devtools)
library(devtools)
has_devel()
library(devtools)
has.devel()
install.packages("roxygen2")
install.packages("roxygen2")
install_github("devtools", "hadley")
getwd()
